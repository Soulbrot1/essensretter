name: Flutter CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test:
    name: Test & Analyze
    runs-on: macos-latest

    steps:
      - name: 📚 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          channel: 'stable'

      - name: 📦 Get dependencies
        run: flutter pub get

      - name: 📝 Check formatting
        run: dart format --set-exit-if-changed lib/ test/

      - name: 🔬 Analyze code
        run: flutter analyze

      - name: 🧪 Run tests
        run: flutter test --coverage

      - name: 📊 Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: coverage/lcov.info
          fail_ci_if_error: false

      - name: 📈 Coverage Report
        run: |
          brew install lcov || true
          lcov --summary coverage/lcov.info
          # Check minimum coverage
          coverage=$(lcov --summary coverage/lcov.info | grep "lines" | sed 's/.*: \([0-9.]*\)%.*/\1/')
          echo "Coverage: $coverage%"
          if (( $(echo "$coverage < 80" | bc -l) )); then
            echo "⚠️ Warning: Coverage is below 80%"
          fi

      - name: 🔎 Check for print statements
        run: |
          if grep -r "print(" lib/ --include="*.dart" | grep -v "// ignore:"; then
            echo "⚠️ Found print statements in production code"
            exit 1
          fi

  build-ios:
    name: Build iOS
    runs-on: macos-latest
    needs: test
    if: github.event_name == 'push'

    steps:
      - name: 📚 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          channel: 'stable'

      - name: 📦 Get dependencies
        run: flutter pub get

      - name: 🏗️ Build iOS (no signing)
        run: flutter build ios --release --no-codesign

  build-android:
    name: Build Android
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push'

    steps:
      - name: 📚 Checkout code
        uses: actions/checkout@v4

      - name: ☕ Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: 🔧 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          channel: 'stable'

      - name: 📦 Get dependencies
        run: flutter pub get

      - name: 🏗️ Build APK
        run: flutter build apk --release

      - name: 📤 Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: app-release.apk
          path: build/app/outputs/flutter-apk/app-release.apk
